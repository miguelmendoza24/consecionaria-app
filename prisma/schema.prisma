generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  id          String   @id @default(uuid())
  brand       String
  model       String
  year        Int
  price        Decimal @db.Decimal(10, 2)
  status      CarStatus  @default(AVAILABLE)
  soldAt      DateTime?
  sales       Sale[]
}

model Client {
  id        String   @id @default(uuid())
  name      String
  age       Int
  phone     String
  email     String @unique
  sales     Sale[]
}

model Administrator {
  id                String   @id @default(uuid())
  name              String
  age               Int
  email             String   @unique
  phone             String
  authorizationCode String
}

model Seller {
  id        String   @id @default(uuid())
  name      String
  age       Int
  email     String   @unique
  phone     String
  sales     Sale[]
  processedReturns Return[] @relation("ProcessedReturns")
  createdAt DateTime @default(now())
}

model Sale {
  id        String   @id @default(uuid())
  amount    Decimal  @db.Decimal(10, 2)
  date      DateTime @default(now())
   car       Car      @relation(fields: [carId], references: [id])
  carId    String
   client    Client   @relation(fields: [clientId], references: [id])
    clientId  String
  seller    Seller   @relation(fields: [sellerId], references: [id]) 
  sellerId  String
  returns Return[]
}

model Return {
  id          String   @id @default(uuid())
  reason      String
  amount      Decimal  @db.Decimal(10, 2)
  date        DateTime @default(now())
  sale        Sale     @relation(fields: [saleId], references: [id])
  saleId      String
  processedBy Seller?  @relation(fields: [sellerId], references: [id], name: "ProcessedReturns")
  sellerId    String? 
}

model User {
  id       String     @id @default(uuid())
  name     String
  email    String  @unique
  password String
  age     Int
}

enum CarStatus {
  AVAILABLE
  SOLD
  MAINTENANCE
}